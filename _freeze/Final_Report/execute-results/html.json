{
  "hash": "aadcaf2af0262af9b5510cab57cb2e56",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ESS 330 Final Project: Changes in Carbon Emissions and Energy Use in the Top Five Polluting Countries During COVID-19\"\nauthor:\n  - name: \"Yazeed Aljohani\"\n    affiliation: \"Colorado State University\"\n  - name: \"Josh Puyear\"\n    affiliation: \"Colorado State University\"\n  - name: \"Cade Vanek\"\n    affiliation: \"Colorado State University\"\ndate: 2025-05-14\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Show code\"\neditor: visual\nbibliography: references.bib\nkeywords: [CO2 emissions, COVID-19, GHG, workflow, ANOVA, sustainability]\nabstract: |\n  This study analyzes changes in per capita greenhouse gas (GHG) emissions and emissions per unit of energy use in the top five CO₂ emitting countries: China, the United States, India, Russia, and Japan during the COVID-19 period (2015 to 2022). The objective is to assess how emissions patterns shifted before, during, and after the pandemic and to identify the strongest predictors of these changes. \n  Using data from Our World in Data, we cleaned and filtered emissions data from 2015 to 2022 and grouped years into three periods: pre-COVID (2015 to 2019), during COVID (2020), and post-COVID (2021 to 2022). We focused on key emission sectors including coal, oil, gas, cement, and industrial processes. \n  We applied ANOVA to determine whether per capita emissions changed significantly across periods for each country. China, Japan, and the United States showed statistically significant changes (p < 0.05), while changes in India and Russia were not significant. Linear regression identified gas emissions as the strongest positive predictor of per capita GHG emissions. \n  We also modeled CO₂ emissions per unit of energy using machine learning techniques, including random forest, which performed best (R² = 0.91). GDP per capita and gas emissions per capita were the most important predictors. \n  Our findings show that emissions temporarily decreased during the pandemic but rebounded in most countries by 2022. These results suggest opportunities for long-term emission reductions lie in transforming energy systems and targeting specific high-emission sectors. The study highlights the value of combining statistical and machine learning approaches to guide sustainable policy.\n---\n\n\n\n# **Introduction/Hypothesis**\n\nClimate change is one of the most urgent challenges facing the world today. A primary driver of climate change is the release of greenhouse gases, especially carbon dioxide (CO₂), which is emitted through activities such as burning fossil fuels for energy, transportation, and industrial processes. CO₂ remains the most significant contributor to global warming due to its long atmospheric lifespan and the scale of human emissions @archer2009. Despite international agreements like the Paris Accord aimed at limiting global warming, CO₂ emissions continue to rise @UNEP2022.\n\nA small number of countries—China, the United States, India, Russia, and Japan—are responsible for the majority of global carbon emissions. These nations differ in population size, energy sources, and industrial output, yet each plays a critical role in shaping emissions trends. Assessing emissions on a per capita basis provides a more equitable way to understand responsibility and consumption, offering deeper insights than total emissions alone @Ritchie202.\n\nThe COVID-19 pandemic created an unexpected opportunity to examine how major disruptions impact emissions. In 2020, global CO₂ emissions fell by approximately 5.4 percent, the largest annual drop ever recorded (Forster et al., 2020), largely due to reduced transportation and industrial activity during lockdowns. However, as economies reopened in 2021 and 2022, emissions quickly rebounded. This raises important questions about whether these changes signal structural shifts or were merely temporary @lequere2021.\n\nEnergy-related emissions are a critical factor in understanding changes in CO₂ output, especially as global energy demand continues to grow. Each country's energy mix—how it generates electricity—affects the amount of CO₂ emitted per kilowatt-hour. This makes energy-based metrics essential for comparing emissions and identifying opportunities for reductions.\n\nWhile some studies have examined the short-term impacts of COVID-19 on emissions, fewer have investigated long-term trends in per capita and energy-related emissions across the highest-emitting countries. This study addresses that gap by applying both traditional statistical analysis and machine learning techniques to explore emission trends from 2015 to 2022 in China, the United States, India, Russia, and Japan.\n\nWe focus on two main indicators: greenhouse gas emissions per person and CO₂ emissions per kilowatt-hour of energy used. Data are divided into three periods: pre-COVID (2015–2019), during COVID (2020), and post-COVID (2021–2022). By comparing these periods, we aim to determine whether emission shifts were lasting or temporary and to identify the sectors that contributed most to these changes.\n\n**Objectives** \n\n1.  Compare per capita greenhouse gas emissions before, during, and after COVID-19 in the five largest CO₂-emitting countries. \n\n<!-- -->\n\n2.  Identify which sector-specific emissions best predict per capita and per unit energy CO₂ emissions using linear regression and machine learning. \n\n<!-- -->\n\n3.  Evaluate whether emission changes during the pandemic represent meaningful shifts in national emissions behavior. \n\n**Hypotheses** \n\n-   H1: Per capita greenhouse gas emissions declined during the COVID-19 pandemic and partially rebounded in the post-COVID period, with variation across countries. \n\n<!-- -->\n\n-   H2: Sector-specific emissions such as gas and coal use are strong predictors of per capita emissions in all periods. \n\n<!-- -->\n\n-   H3: GDP per capita and gas emissions per capita are the most important predictors of CO₂ emissions per unit of energy. \n\n# Methods\n\n### Study Scope and Dataset\n\nGreenhouse gas emissions data was sourced from Our World in Data [@owid-scaling-up-ai], which compiles information from multiple sources, such as the Global Carbon Project. The dataset from Oxford's Our World in Data includes emissions levels from the industrial revolution up to 2023. We utilized data from 2015 to 2022, focusing on the years 2019 to 2021, with the peak of the COVID-19 pandemic lockdowns happening in 2020 [@forster2020current].\n\nTo explain influences on total CO2, we narrowed 78 metrics collected in the Oxford dataset to two response variables, CO2 per unit energy, and CO2 emissions per capita (excluding land use change). These response variables account for regular widespread emissions. The proportion of per capita emissions from the top five cumulative CO2 emitting countries to the full record of countries during the 2015 to 2022 period revealed the impact that these countries can have to curb CO2 emissions in the future. In 2022, the top five CO2 emitters were responsible for 60.9 percent of global CO2 emissions.\n\n### Data Preparation and Predictor Variables\n\nTo compare CO2 emissions before, during, and after the pandemic, we used the tidymodels package in R along with dplyr. The predictor variables gdp_percap, gas_CO2_per_capita, share_global_coal_CO2, coal_CO2_per_capita, cumulative_luc_CO2, oil_CO2_per_capita, and share_global_luc_CO2 (Table 1) were chosen to model CO2 emissions per unit energy based on correlation tests and an educated guess as to the most effective predictors. These predictor variables attributed the response partly to individual demand for energy (in the case of per capita emissions) and partly to energy use by the whole country (in the case of share of global coal CO2 emissions). Although there are many energy sources for electricity, coal is the most CO2-polluting, so was one of the only two energy polluters included @environmental_protection_agency_2025.\n\nPredictor variables for ghg_excluding_lucf_per_capita were cumulative_CO2_including_luc, primary_energy_consumption, temperature_change_from_ghg, population, CO2_per_unit_energy, gdp_percap, cumulative_CO2, cumulative_coal_CO2, cumulative_coal_CO2, cumulative_luc_CO2, energy_per_capita. These predictors attempted to find a proxy for population-based CO2 emissions.\n\n### Statistical and Machine Learning Methods\n\nTo analyze our data, we used a combination of ANOVA statistical tests and machine learning. ANOVA was used to assess differences in emissions before, during, and after COVID. A linear regression model was used to model per-capita emissions as a function of sector-specific CO2 emissions (coal, oil, gas, cement, and misc industry). Our research focuses on revealing relationships between countries and between predictor variables of greenhouse emissions.\n\nWe compared per unit energy CO2 emissions among the top five cumulative polluters. Machine learning models to predict ghg_excluding_lucf_per_capita (greenhouse gases excluding land use change emitted per person) and CO2_per_unit_energy (in CO2 emitted per kilowatt-hour) were constructed using the rsamples, parsnip, workflowsets, and baguettes packages.\n\nWe tested predictor variables with linear regression, neural network @giannelos_2024, random forest (Kjajavi et al. 2023), decision tree @rahman_2023, and boosted tree @si_du_2020 models to find predictor variables. The best model for each of the two response variables was analyzed with the vip package to reveal the most explanatory variables that predicted CO2 emissions per unit energy and CO2 per capita emissions from the selected variables.\n\n# Results\n\n### Data Exploration\n\n\n\n::: {.cell .hidden}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n#| include: false\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n#| include: false\n\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(dplyr)\n\ndata <- read_csv(\"data/owid-co2-data (1).csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 50191 Columns: 79\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): country, iso_code\ndbl (77): year, population, gdp, cement_co2, cement_co2_per_capita, co2, co2...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell .hidden}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n#| include: false\n# Narrowing Data to 2015-2022\ndata_filtered <- data |> \n  filter(year >= 2015, year <= 2022) |> \n  filter(!is.na(iso_code) & nchar(iso_code) == 3)\n\n# Getting top 5 CO2 emitting countries by total GHG (excluding land use)- This is total cumulative ghg emissions\ntop_emitters <- data_filtered |> \n  group_by(country) |> \n  summarise(total_ghg = sum(total_ghg_excluding_lucf, na.rm = TRUE)) |> \n  arrange(desc(total_ghg)) |> \n  slice_head(n = 5) |> \n  pull(country)\n\n# Filtering data to include only those countries and select relevant variables\ndf <- data_filtered |> \n  filter(country %in% top_emitters) |> \n  select(country, year, ghg_excluding_lucf_per_capita, \n         coal_co2, gas_co2, oil_co2, cement_co2, other_industry_co2)\n\n# Adding period category (pre, during, post COVID)\ndf <- df |> \n  mutate(period = case_when( \n    year <= 2019 ~ \"pre_covid\", \n    year == 2020 ~ \"during_covid\", \n    year >= 2021 ~ \"post_covid\" \n  )) |> \n  mutate(period = factor(period, levels = c(\"pre_covid\", \"during_covid\", \"post_covid\")))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nknitr::opts_chunk$set(\n  echo = FALSE,       \n  warning = FALSE,    \n  message = FALSE)    \nggplot(df, aes(x = factor(year), y = ghg_excluding_lucf_per_capita, color = country, group = country)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    title = \"Per Capita GHG Emissions (Excl. Land Use) by Country (2015–2022)\",\n    x = \"Year\", y = \"GHG per Capita (tCO₂e)\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nThise graph shows how greenhouse gas emissions per person changed in China, the United States, India, Russia, and Japan from 2015 to 2022. You can see a drop around 2020 during COVID, especially in the United States and Russia. Some countries' emissions started going back up after 2020.\n\n\n\n::: {.cell .hidden}\n\n```{.r .cell-code .hidden}\n#| message: false\n#| warning: false\n#| include: false\n\ndf_long <- df |> \n  pivot_longer(cols = c(coal_co2, gas_co2, oil_co2, cement_co2, other_industry_co2),\n               names_to = \"sector\", values_to = \"emissions\") |> \n  drop_na(emissions)\n\nggplot(df_long, aes(x = year, y = emissions, color = sector, group = interaction(sector, country))) +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~ country, scales = \"free_y\", ncol = 2) +\n  scale_x_continuous(breaks = 2015:2022) +\n  labs(title = \"Sector-specific CO₂ Emissions (2015–2022)\", \n       x = \"Year\", \n       y = \"Emissions (MtCO₂)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nThis graph shows where each country's emissions came from: like coal, oil, gas, cement, or other industries. For example, China has a lot of coal emissions, and the United States has more oil emissions. You can also see how emissions from some sectors dropped in 2020 and then changed again after COVID.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nknitr::opts_chunk$set(\n  echo = FALSE,       \n  warning = FALSE,    \n  message = FALSE)    \n# 1. Prepare data\ndf <- data_filtered |>\n  filter(country %in% top_emitters) |>\n  select(country, year, ghg_excluding_lucf_per_capita,\n         coal_co2, gas_co2, oil_co2, cement_co2, other_industry_co2,\n         gdp, population) |>\n  mutate(\n    gdp_per_capita = gdp / population,\n    period = case_when(\n      year <= 2019 ~ \"pre_covid\",\n      year == 2020 ~ \"during_covid\",\n      year >= 2021 ~ \"post_covid\"\n    )\n  ) |>\n  mutate(period = factor(period, levels = c(\"pre_covid\", \"during_covid\", \"post_covid\")))\n\n# 2. Run ANOVA for each country\nfor (c in unique(df$country)) {\n  df_country <- df |> filter(country == c)\n  if (n_distinct(df_country$period) > 1) {\n    cat(\"\\n--- ANOVA for\", c, \"---\\n\")\n    model <- aov(ghg_excluding_lucf_per_capita ~ period, data = df_country)\n    print(summary(model))\n  } else {\n    cat(\"\\n--- Skipped ANOVA for\", c, \": not enough periods ---\\n\")\n  }\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n--- ANOVA for China ---\n            Df Sum Sq Mean Sq F value Pr(>F)  \nperiod       2 1.2803  0.6402   13.06 0.0103 *\nResiduals    5 0.2451  0.0490                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n--- ANOVA for India ---\n            Df  Sum Sq  Mean Sq F value Pr(>F)\nperiod       2 0.04456 0.022280   2.956  0.142\nResiduals    5 0.03769 0.007537               \n\n--- ANOVA for Japan ---\n            Df Sum Sq Mean Sq F value Pr(>F)  \nperiod       2 1.6155  0.8077   7.299 0.0329 *\nResiduals    5 0.5533  0.1107                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n--- ANOVA for Russia ---\n            Df Sum Sq Mean Sq F value Pr(>F)  \nperiod       2 1.3923  0.6961   4.433 0.0781 .\nResiduals    5 0.7852  0.1570                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n--- ANOVA for United States ---\n            Df Sum Sq Mean Sq F value  Pr(>F)   \nperiod       2  4.906  2.4529   21.37 0.00355 **\nResiduals    5  0.574  0.1148                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# 3. Linear Regression\nlm_model <- lm(ghg_excluding_lucf_per_capita ~ coal_co2 + oil_co2 + gas_co2 + cement_co2 + other_industry_co2, data = df)\nsummary(lm_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = ghg_excluding_lucf_per_capita ~ coal_co2 + oil_co2 + \n    gas_co2 + cement_co2 + other_industry_co2, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.2833 -0.3541  0.1507  0.4693  1.4989 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         8.2798981  0.3661956  22.611  < 2e-16 ***\ncoal_co2            0.0003590  0.0008477   0.424 0.675372    \noil_co2            -0.0021149  0.0005530  -3.825 0.000737 ***\ngas_co2             0.0074705  0.0008038   9.293 9.53e-10 ***\ncement_co2         -0.0237091  0.0076398  -3.103 0.004572 ** \nother_industry_co2  0.0864354  0.0379252   2.279 0.031111 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9042 on 26 degrees of freedom\n  (8 observations deleted due to missingness)\nMultiple R-squared:  0.9521,\tAdjusted R-squared:  0.9429 \nF-statistic: 103.3 on 5 and 26 DF,  p-value: 2.663e-16\n```\n\n\n:::\n:::\n\n\n\n| Country       | p-value | Interpretation                    |\n|:--------------|:--------|:----------------------------------|\n| China         | 0.0103  | Significant change (p \\< 0.05)    |\n| India         | 0.142   | No significant change (p \\> 0.05) |\n| Japan         | 0.0329  | Significant change (p \\< 0.05)    |\n| Russia        | 0.0781  | Not quite significant (p \\> 0.05) |\n| United States | 0.00355 | Significant change (p \\< 0.01)    |\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlm_model <- lm(ghg_excluding_lucf_per_capita ~ coal_co2 + oil_co2 + gas_co2 + cement_co2 + other_industry_co2, data = df)\nsummary(lm_model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = ghg_excluding_lucf_per_capita ~ coal_co2 + oil_co2 + \n    gas_co2 + cement_co2 + other_industry_co2, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.2833 -0.3541  0.1507  0.4693  1.4989 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         8.2798981  0.3661956  22.611  < 2e-16 ***\ncoal_co2            0.0003590  0.0008477   0.424 0.675372    \noil_co2            -0.0021149  0.0005530  -3.825 0.000737 ***\ngas_co2             0.0074705  0.0008038   9.293 9.53e-10 ***\ncement_co2         -0.0237091  0.0076398  -3.103 0.004572 ** \nother_industry_co2  0.0864354  0.0379252   2.279 0.031111 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9042 on 26 degrees of freedom\n  (8 observations deleted due to missingness)\nMultiple R-squared:  0.9521,\tAdjusted R-squared:  0.9429 \nF-statistic: 103.3 on 5 and 26 DF,  p-value: 2.663e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Example summary dataframe (replace with your actual grouped summary if needed)\nsummary_df <- df %>%\n  group_by(country, period) %>%\n  summarize(\n    mean_emission = mean(ghg_excluding_lucf_per_capita, na.rm = TRUE),\n    se = sd(ghg_excluding_lucf_per_capita, na.rm = TRUE) / sqrt(n()),\n    .groups = \"drop\"\n  )\n\n# Optional: Set factor order for periods\nsummary_df$period <- factor(summary_df$period, levels = c(\"pre_covid\", \"during_covid\", \"post_covid\"))\n\n# Plot\nggplot(summary_df, aes(x = period, y = mean_emission, group = country, color = country)) +\n  geom_line(linewidth = 1.2) +\n  geom_point(size = 3) +\n  geom_errorbar(aes(ymin = mean_emission - se, ymax = mean_emission + se), width = 0.1, linewidth = 0.7) +\n  labs(\n    title = \"Mean GHG Emissions Per Capita Across Periods (2015–2022)\",\n    x = \"COVID Period\",\n    y = \"GHG Emissions Per Capita\"\n  ) +\n  theme_minimal(base_size = 13) +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    axis.text.x = element_text(angle = 20, hjust = 1),\n    legend.title = element_blank()\n  ) +\n  annotate(\"text\", x = 2, y = min(summary_df$mean_emission) - 1,\n           label = \"Only China, Japan, and the US showed significant changes across periods (p < 0.05, ANOVA).\",\n           size = 3.8, hjust = 0.5, fontface = \"italic\")\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n### Model Validation\n\n-   Plotted actual vs. predicted emissions to assess model fit.\n\n-   Visualized regression coefficients with confidence intervals to interpret the influence of each emission sector.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# After selecting the variables, clean properly:\ndf <- df |> drop_na(ghg_excluding_lucf_per_capita, coal_co2, oil_co2, gas_co2, cement_co2, other_industry_co2)\n\n# Now build the model\nlm_model <- lm(ghg_excluding_lucf_per_capita ~ coal_co2 + oil_co2 + gas_co2 + cement_co2 + other_industry_co2, data = df)\n\n# Now add predictions\ndf$predicted <- predict(lm_model)\n\n# Now plot Actual vs Predicted\nggplot(df, aes(x = ghg_excluding_lucf_per_capita, y = predicted, color = country)) +\n  geom_point(size = 2) +\n  geom_abline(slope = 1, intercept = 0, linetype = \"dashed\") +\n  labs(title = \"Actual vs Predicted GHG per Capita\",\n       x = \"Actual GHG per Capita\",\n       y = \"Predicted GHG per Capita\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\nThis graph compares the real emissions to the ones predicted by our model. If the points are close to the dashed line, it means the model did a good job. Most of the points are pretty close to the line, so the model worked well.\n\n#ML\nWe conducted two separate modeling analyses to predict greenhouse gas (GHG) emissions per capita (excluding land use change) and CO2 emissions per kilowatt-hour, focusing on the top five global emitters between 2015 and 2022. Below we detail the results, supported by figures, tables, and the corresponding R code used for each step.\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(dplyr)\n\n\ndata <- read_csv(\"data/owid-co2-data (1).csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 50191 Columns: 79\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): country, iso_code\ndbl (77): year, population, gdp, cement_co2, cement_co2_per_capita, co2, co2...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Narrowing Data to 2015-2022\n\ndata_filtered <- data |>\n  filter(year >= 2015, year <= 2022) |>\n  filter(!is.na(iso_code) & nchar(iso_code) == 3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Getting top 5 CO2 emitting countries by total GHG (excluding land use)- This is total cumulative ghg emissions\n\ntop_emitters <- data_filtered |>\n  group_by(country) |>\n  summarise(total_ghg = sum(total_ghg_excluding_lucf, na.rm = TRUE)) |>\n  arrange(desc(total_ghg)) |>\n  slice_head(n = 5) |>\n  pull(country)\n\n# Filtering data to include only those countries and select relevant variables\ndf <- data_filtered |>\n  filter(country %in% top_emitters) |>\n  select(country, year, ghg_excluding_lucf_per_capita,\n         coal_co2, gas_co2, oil_co2, cement_co2, other_industry_co2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Adding period category (pre, during, post COVID)\ndf <- df |>\n  mutate(period = case_when(\n    year <= 2019 ~ \"pre_covid\",\n    year == 2020 ~ \"during_covid\",\n    year >= 2021 ~ \"post_covid\"\n  )) |>\n  mutate(period = factor(period, levels = c(\"pre_covid\", \"during_covid\", \"post_covid\")))\n```\n:::\n\n\n\n**Table 1.** A Table of Predictor Variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(gridExtra)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'gridExtra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(grid)\nlibrary(gtable)\nlibrary(png)\n\n# Create a data frame with the model information\nmodel_info <- data.frame(\n  Model = c(\"Model 1\", \"Model 2\"),\n  Response_Variable = c(\"ghg_excluding_lucf_per_capita\", \"co2_per_unit_energy\"),\n  Predictors = c(\n    \"• cumulative_co2_including_luc\\n• primary_energy_consumption\\n• temperature_change_from_ghg\\n• population\\n• co2_per_unit_energy\\n• gdp_percap\\n• cumulative_co2\\n• cumulative_coal_co2\\n• cumulative_luc_co2\\n• energy_per_capita\",\n    \"• gas_co2_per_capita\\n• oil_co2_per_capita\\n• gdp_percap\\n• coal_co2_per_capita\\n• share_global_coal_co2\\n• cumulative_luc_co2\\n• share_global_luc_co2\"\n  )\n)\n\n# Create a more detailed table for display\ndetailed_table <- data.frame(\n  \" \" = c(\"Model\", \"Response Variable\", \"Predictor Variables\"),\n  \"Model 1\" = c(\n    \"Model 1\",\n    \"ghg_excluding_lucf_per_capita\",\n    paste(\n      \"• cumulative_co2_including_luc\",\n      \"• primary_energy_consumption\",\n      \"• temperature_change_from_ghg\",\n      \"• population\",\n      \"• co2_per_unit_energy\",\n      \"• gdp_percap\",\n      \"• cumulative_co2\",\n      \"• cumulative_coal_co2\",\n      \"• cumulative_luc_co2\",\n      \"• energy_per_capita\",\n      sep = \"\\n\"\n    )\n  ),\n  \"Model 2\" = c(\n    \"Model 2\",\n    \"co2_per_unit_energy\",\n    paste(\n      \"• gas_co2_per_capita\",\n      \"• oil_co2_per_capita\",\n      \"• gdp_percap\",\n      \"• coal_co2_per_capita\",\n      \"• share_global_coal_co2\",\n      \"• cumulative_luc_co2\",\n      \"• share_global_luc_co2\",\n      sep = \"\\n\"\n    )\n  )\n)\n\ntg <- tableGrob(\n  detailed_table, \n  rows = NULL,\n  theme = ttheme_default(\n    core = list(\n      bg_params = list(fill = c(\"#F7F7F7\", \"#FFFFFF\", \"#F7F7F7\"), col = NA),\n      fg_params = list(cex = 0.8)\n  )\n))\n\n# Add borders\ntg <- gtable_add_grob(\n  tg,\n  grobs = rectGrob(gp = gpar(fill = NA, lwd = 2)),\n  t = 1, b = nrow(tg), l = 1, r = ncol(tg)\n)\n\n# Add header background\ntg <- gtable_add_grob(\n  tg,\n  grobs = rectGrob(gp = gpar(fill = \"#4472C4\", alpha = 0.5)),\n  t = 1, l = 1, r = ncol(tg)\n)\n\n# Add white text for header\ntg <- gtable_add_grob(\n  tg,\n  grobs = textGrob(\n    \"Predictor Variables for Machine Learning Models\", \n    gp = gpar(fontface = \"bold\", col = \"white\", cex = 1.2)\n  ),\n  t = 1, l = 1, r = ncol(tg)\n)\n\n# Save as PNG\npng(\"model_predictors_table.png\", width = 800, height = 400, res = 100)\ngrid.draw(tg)\ndev.off()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nquartz_off_screen \n                2 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Message to user\ncat(\"Table saved as 'model_predictors_table.png' in your working directory:\", getwd())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTable saved as 'model_predictors_table.png' in your working directory: /Users/amhs5/Documents/ESS330-FinalProject-April23\n```\n\n\n:::\n:::\n\n\n\n## Predicting CO2 Emissions per capita\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Mutate data, check for Interaction terms\n\n#set a seed\nset.seed(341)\n\n#doing a correlation test for variables\n\nghg_per_cap <- data_filtered %>% \n  mutate(period = case_when(\n    year <= 2019 ~ \"pre_covid\",\n    year == 2020 ~ \"during_covid\",\n    year >= 2021 ~ \"post_covid\"\n  )) %>% \n  group_by(country) %>% \n  mutate(gdp_percap = gdp/population) %>% \n  ungroup() %>% \nselect(ghg_excluding_lucf_per_capita, cumulative_co2_including_luc, primary_energy_consumption, temperature_change_from_ghg, population, co2_per_unit_energy, gdp_percap, cumulative_co2, cumulative_coal_co2, cumulative_coal_co2, cumulative_luc_co2, energy_per_capita) %>%\n  drop_na\n\n\npc_cor <- cor(ghg_per_cap)\n\n#Interaction terms\n#ghg_excluding_lucf_per_capita:energy_per_capita, gdp_percap:energy_per_capita, cumulative_luc_co2:cumulative_co2_including_luc, cumulative_luc_co2:temperature_change_from_n2o, cumulative_coal_co2:cumulative_co2, primary_energy_consumption:cumulative_coal_co2, temperature_change_from_ghg:cumulative_coal_co2, cumulative_coal_co2:temperature_change_from_n2o, temperature_change_from_co2:cumulative_coal_co2, cumulative_co2_including_luc:cumulative_coal_co2, temperature_change_from_ghg:cumulative_co2, primary_energy_consumption:cumulative_co2, ghg_excluding_lucf_per_capita:gdp_percap, primary_energy_consumption:population, cumulative_co2_including_luc:temperature_change_from_ghg, primary_energy_consumption:temperature_change_from_ghg, cumulative_luc_co2:temperature_change_from_ghg, primary_energy_consumption:cumulative_co2_including_luc, cumulative_co2:cumulative_co2_including_luc\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#model workflow code\n\n#find recipe format from lab 6 / model daily assignments\nlibrary(rsample)\n\nghg_per_cap_split <- initial_split(ghg_per_cap, prop = .8)\nghg_per_cap_train <- training(ghg_per_cap_split)\nghg_per_cap_test  <- testing(ghg_per_cap_split)\n\n\nghg_per_cap_cv <- vfold_cv(ghg_per_cap, v = 10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#attempted recipe format\nlibrary(recipes)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'recipes'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:stringr':\n\n    fixed\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:stats':\n\n    step\n```\n\n\n:::\n\n```{.r .cell-code}\nrec_percap <- recipe(\n  # Formula syntax: outcome ~ predictors\n  ghg_excluding_lucf_per_capita ~ \n    cumulative_co2_including_luc + \n    primary_energy_consumption + \n    temperature_change_from_ghg + \n    population + \n    co2_per_unit_energy + \n    gdp_percap + \n    cumulative_co2 + \n    cumulative_coal_co2 + \n    cumulative_luc_co2 + \n    energy_per_capita, \n  data = ghg_per_cap\n) %>%\n  # Interaction terms (correct syntax)\n  step_interact(\n    terms = ~\n      gdp_percap:energy_per_capita +\n      cumulative_luc_co2:cumulative_co2_including_luc +\n      cumulative_coal_co2:cumulative_co2 +\n      primary_energy_consumption:cumulative_coal_co2 +\n      temperature_change_from_ghg:cumulative_coal_co2 +\n      cumulative_co2_including_luc:cumulative_coal_co2 +\n      temperature_change_from_ghg:cumulative_co2 +\n      primary_energy_consumption:cumulative_co2 +\n      primary_energy_consumption:population +\n      cumulative_co2_including_luc:temperature_change_from_ghg +\n      primary_energy_consumption:temperature_change_from_ghg +\n      cumulative_luc_co2:temperature_change_from_ghg +\n      primary_energy_consumption:cumulative_co2_including_luc +\n      cumulative_co2:cumulative_co2_including_luc\n  ) %>% \n  step_naomit(all_predictors(), all_outcomes())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Load required library\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n✔ broom        1.0.8     ✔ tune         1.3.0\n✔ dials        1.4.0     ✔ workflows    1.2.0\n✔ infer        1.0.8     ✔ workflowsets 1.1.0\n✔ modeldata    1.4.0     ✔ yardstick    1.3.2\n✔ parsnip      1.3.1     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ gridExtra::combine() masks dplyr::combine()\n✖ scales::discard()    masks purrr::discard()\n✖ dplyr::filter()      masks stats::filter()\n✖ recipes::fixed()     masks stringr::fixed()\n✖ dplyr::lag()         masks stats::lag()\n✖ yardstick::spec()    masks readr::spec()\n✖ recipes::step()      masks stats::step()\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# Define your models\nboost <- boost_tree(mode = \"regression\") %>%\n  set_engine(\"xgboost\")\n\nnnet <- mlp(mode = \"regression\") %>%\n  set_engine(\"nnet\")\n\ndtree <- decision_tree(mode = \"regression\") %>%\n  set_engine(\"rpart\")\n\nrf <- rand_forest(mode = \"regression\") %>%\n  set_engine(\"ranger\", importance = \"impurity\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Plotting the best predictive models of emissions per unit energy\n\nlibrary(workflowsets)\nlibrary(baguette)\n\nwfpc <-  workflow_set(list(rec_percap), \n                  list(boost,\n                       nnet,\n                       dtree,\n                       rf)) %>%\n  workflow_map('fit_resamples', resamples = ghg_per_cap_cv)\n\nautoplot(wfpc) +\n   theme(\n    text = element_text(size = 10),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 8),\n    plot.title = element_text(size = 14, face = \"bold\"),\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 8)\n  )\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\n  filename = \"imgs/percap_model_comparison.png\",\n  plot = last_plot(),\n  width = 10,\n  height = 6,\n  dpi = 300\n)\n```\n:::\n\n\n**Figure 1.** Ranking different models' root mean squared error and R-squared error values, tested against CO2 per capita emissions data excluding land use change for the top five cumulative CO2 emitters.\n\n**Table 2.** Ranking Model Testing Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrank_results(wfpc, rank_metric = \"rsq\", select_best = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 9\n  wflow_id         .config .metric   mean std_err     n preprocessor model  rank\n  <chr>            <chr>   <chr>    <dbl>   <dbl> <int> <chr>        <chr> <int>\n1 recipe_boost_tr… Prepro… rmse    0.613  0.0521     10 recipe       boos…     1\n2 recipe_boost_tr… Prepro… rsq     0.993  0.00161    10 recipe       boos…     1\n3 recipe_rand_for… Prepro… rmse    0.667  0.0604     10 recipe       rand…     2\n4 recipe_rand_for… Prepro… rsq     0.993  0.00149    10 recipe       rand…     2\n5 recipe_decision… Prepro… rmse    2.21   0.165      10 recipe       deci…     3\n6 recipe_decision… Prepro… rsq     0.901  0.0208     10 recipe       deci…     3\n7 recipe_mlp       Prepro… rmse    7.55   0.815      10 recipe       mlp       4\n8 recipe_mlp       Prepro… rsq     0.0811 0.0221     10 recipe       mlp       4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n### Making a workflow to predict Co2 emitted per capita\n\nlibrary(tidymodels)\nrf_wf_pc <- workflow() %>%\n  # Add the recipe\n  add_recipe(rec_percap) %>%\n  # Add the model\n  add_model(rf) %>%\n  # Fit the model to the training data\n  fit(data = ghg_per_cap_train) \n\nrf_data_pc <- augment(rf_wf_pc, new_data = ghg_per_cap_test)\n\n\ndim(rf_data_pc)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 192  12\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Ranking the most important predictors\n\nrf_model <- extract_fit_engine(rf_wf_pc)\nvip::vip(rf_model) + theme(\n    text = element_text(size = 10),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 8),\n    plot.title = element_text(size = 14, face = \"bold\"),\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 8))\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(filename = \"compare_percap.png\", plot = last_plot(), path = \"imgs\" )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving 7 x 5 in image\n```\n\n\n:::\n:::\n\n\n**Figure 2.** Ranking importance of each predictor variable at explaining CO2 emissions per capita in the random forest model selected for analysis.\n\n## CO2 per Unit Energy- Top 5 Countries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#co2_per_unit_energy\n \ndf3 <- data_filtered %>% \n  group_by(country) %>% \n  filter(country %in% c(\"China\", \"India\", \"Russia\", \"United States\", \"Japan\")) %>%\n  select(country, year, co2_per_unit_energy,\n         ghg_excluding_lucf_per_capita) %>% \n  mutate(percap = ghg_excluding_lucf_per_capita, energy = co2_per_unit_energy)\n\n\nggplot(df3, aes(x = factor(year), y = co2_per_unit_energy, color = country, group = country)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    title = \" 2015 - 2022 CO2 per kilowatt-hour emissions\",,\n    x = \"Year\", y = \"CO2 produced per kwh emissions\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(last_plot(), filename = \"pkwh_country1522.png\", path = \"imgs\", width = 7, height = 7)\n```\n:::\n\n\n**Figure 3.** CO2 per kilowatt-hour emissions for the top five cumulative emitters.\n\n**Table 3.** table showing share of global CO2 emissions in 2022\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(gt)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at /Users/amhs5/Documents/ESS330-FinalProject-April23\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(webshot2)\n\n# 1. Calculate emissions and percentages\nemissions_summary <- data_filtered %>%\n  filter(year == 2022) %>%\n  mutate(country_group = case_when(\n    country %in% c(\"United States\", \"China\", \"India\", \"Russia\", \"Japan\") ~ \"Top 5 Emitters\",\n  )) %>%\n  group_by(country_group) %>%\n  summarize(\n    emissions = sum(co2, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    percentage = emissions / sum(emissions) * 100,\n    percentage_label = sprintf(\"%.1f%%\", percentage)\n  )\n\n# 2. Create formatted comparison table\ncomparison_table <- emissions_summary %>%\n  gt() %>%\n  cols_label(\n    country_group = \"Country Group\",\n    emissions = \"CO₂ Emissions (Mt)\",\n    percentage_label = \"Share\"\n  ) %>%\n  fmt_number(\n    columns = emissions,\n    decimals = 0\n  ) %>%\n  tab_header(\n    title = \"Global CO₂ Emissions Breakdown (2022)\",\n    subtitle = \"Comparison between major emitting countries and the rest of the world\"\n  ) %>%\n  tab_style(\n    style = cell_text(weight = \"bold\"),\n    locations = cells_column_labels()\n  ) %>%\n  tab_options(\n    table.font.size = px(14),\n    heading.title.font.size = px(18)\n  )\n\n# 3. Save as PNG (ensure directory exists)\n\nif (!dir.exists(\"imgs\")) dir.create(\"imgs\")\ngtsave(comparison_table, \n       filename = \"imgs/co2_comparison.png\",\n       vwidth = 1000,\n       vheight = 400)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nfile:////var/folders/sp/ngr8zll12xqdn33d6hd_5n0m0000gn/T//RtmpubzrKf/file737872a30366.html screenshot completed\n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. Show the table in R\ncomparison_table\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"zhuhhnuicv\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#zhuhhnuicv table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#zhuhhnuicv thead, #zhuhhnuicv tbody, #zhuhhnuicv tfoot, #zhuhhnuicv tr, #zhuhhnuicv td, #zhuhhnuicv th {\n  border-style: none;\n}\n\n#zhuhhnuicv p {\n  margin: 0;\n  padding: 0;\n}\n\n#zhuhhnuicv .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 14px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#zhuhhnuicv .gt_title {\n  color: #333333;\n  font-size: 18px;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#zhuhhnuicv .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#zhuhhnuicv .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#zhuhhnuicv .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#zhuhhnuicv .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#zhuhhnuicv .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#zhuhhnuicv .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#zhuhhnuicv .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#zhuhhnuicv .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#zhuhhnuicv .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#zhuhhnuicv .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#zhuhhnuicv .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#zhuhhnuicv .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#zhuhhnuicv .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zhuhhnuicv .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#zhuhhnuicv .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#zhuhhnuicv .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#zhuhhnuicv .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zhuhhnuicv .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#zhuhhnuicv .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zhuhhnuicv .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#zhuhhnuicv .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zhuhhnuicv .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zhuhhnuicv .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zhuhhnuicv .gt_left {\n  text-align: left;\n}\n\n#zhuhhnuicv .gt_center {\n  text-align: center;\n}\n\n#zhuhhnuicv .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#zhuhhnuicv .gt_font_normal {\n  font-weight: normal;\n}\n\n#zhuhhnuicv .gt_font_bold {\n  font-weight: bold;\n}\n\n#zhuhhnuicv .gt_font_italic {\n  font-style: italic;\n}\n\n#zhuhhnuicv .gt_super {\n  font-size: 65%;\n}\n\n#zhuhhnuicv .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#zhuhhnuicv .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#zhuhhnuicv .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#zhuhhnuicv .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#zhuhhnuicv .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#zhuhhnuicv .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#zhuhhnuicv .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#zhuhhnuicv .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#zhuhhnuicv div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_title gt_font_normal\" style>Global CO₂ Emissions Breakdown (2022)</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Comparison between major emitting countries and the rest of the world</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"country_group\">Country Group</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"emissions\">CO₂ Emissions (Mt)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"percentage\">percentage</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"percentage_label\">Share</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"country_group\" class=\"gt_row gt_left\">Top 5 Emitters</td>\n<td headers=\"emissions\" class=\"gt_row gt_right\">22,095</td>\n<td headers=\"percentage\" class=\"gt_row gt_right\">60.92765</td>\n<td headers=\"percentage_label\" class=\"gt_row gt_right\">60.9%</td></tr>\n    <tr><td headers=\"country_group\" class=\"gt_row gt_left\">NA</td>\n<td headers=\"emissions\" class=\"gt_row gt_right\">14,170</td>\n<td headers=\"percentage\" class=\"gt_row gt_right\">39.07235</td>\n<td headers=\"percentage_label\" class=\"gt_row gt_right\">39.1%</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n## Predicting CO2 Emissions per unit Energy\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Mutate data, check for Interaction terms\n#set a seed\nset.seed(341)\n\n#doing a correlation test for variables\n1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\nghg_per_eny <- data_filtered %>% \n  mutate(period = case_when(\n    year <= 2019 ~ \"pre_covid\",\n    year == 2020 ~ \"during_covid\",\n    year >= 2021 ~ \"post_covid\"\n  )) %>% \n  group_by(country) %>% \n  mutate(gdp_percap = gdp/population) %>% \n  ungroup() %>% \nselect(co2_per_unit_energy, share_global_luc_co2,\ngas_co2_per_capita, oil_co2_per_capita, gdp_percap, coal_co2_per_capita, share_global_coal_co2, cumulative_luc_co2, share_global_luc_co2) %>%\n  drop_na\n\npkwh_cor <-cor(ghg_per_eny)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## making testing and training data for energy consumption\n#find recipe format from lab 6 / model daily assignments\nlibrary(rsample)\n\nghg_per_eny_split <- initial_split(ghg_per_eny, prop = .8)\nghg_per_eny_train <- training(ghg_per_eny_split)\nghg_per_eny_test  <- testing(ghg_per_eny_split)\n\n\nghg_per_eny_cv <- vfold_cv(ghg_per_eny, v = 10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#attempted recipe format\nlibrary(recipes)\n\nrec_energy <- recipe(co2_per_unit_energy ~\ngas_co2_per_capita + oil_co2_per_capita + gdp_percap + coal_co2_per_capita + share_global_coal_co2 + cumulative_luc_co2 + share_global_luc_co2, data = ghg_per_eny) %>%\n  step_naomit(all_predictors(), all_outcomes())\n\n#ok, it's not worth logging any of these predictors because the models I'm making don't require normal distributions\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#making the models\nlibrary(parsnip)\n\nboost <- boost_tree() %>%\n  # define the engine\n  set_engine(\"xgboost\") %>%\n  # define the mode\n  set_mode(\"regression\")\n\nnnet <- bag_mlp() %>%\n  # define the engine\n  set_engine(\"nnet\") %>%\n  # define the mode\n  set_mode(\"regression\")\n\ndtree <- decision_tree() %>%\n  # define the engine\n  set_engine(\"rpart\") %>%\n  # define the mode\n  set_mode(\"regression\")\n\nrf <- rand_forest(\n  mtry = 5,\n  trees = 1000,\n  min_n = 5\n) %>%\n  set_engine(\"ranger\", importance = \"impurity\") %>%  # <-- ADD THIS\n  set_mode(\"regression\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Plotting the best predictive models of emissions per unit energy\nlibrary(workflowsets)\nlibrary(baguette)\n\nwf <-  workflow_set(list(rec_energy), \n                  list(boost,\n                       nnet,\n                       dtree,\n                       rf)) %>%\n  workflow_map('fit_resamples', resamples = ghg_per_eny_cv)\n\nautoplot(wf) +\n   theme(\n    text = element_text(size = 10),\n    axis.title = element_text(size = 12),\n    axis.text = element_text(size = 8),\n    plot.title = element_text(size = 14, face = \"bold\"),\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 8)\n  )\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\n  filename = \"imgs/perkwh_model_comparison.png\",\n  plot = last_plot(),\n  width = 10,\n  height = 6,\n  dpi = 300\n)\n```\n:::\n\n\n**Figure 4.** Ranking different models' root mean squared error and R-squared error values, tested against CO2 per kilowatt hour emissions data for the top five cumulative CO2 emitters.\n\n**Table 4.** Ranking Model Testing Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrank_results(wf, rank_metric = \"rsq\", select_best = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 9\n  wflow_id         .config .metric   mean std_err     n preprocessor model  rank\n  <chr>            <chr>   <chr>    <dbl>   <dbl> <int> <chr>        <chr> <int>\n1 recipe_rand_for… Prepro… rmse    0.0171 9.04e-4    10 recipe       rand…     1\n2 recipe_rand_for… Prepro… rsq     0.927  6.51e-3    10 recipe       rand…     1\n3 recipe_boost_tr… Prepro… rmse    0.0205 8.33e-4    10 recipe       boos…     2\n4 recipe_boost_tr… Prepro… rsq     0.891  9.56e-3    10 recipe       boos…     2\n5 recipe_decision… Prepro… rmse    0.0366 1.64e-3    10 recipe       deci…     3\n6 recipe_decision… Prepro… rsq     0.645  2.40e-2    10 recipe       deci…     3\n7 recipe_bag_mlp   Prepro… rmse    0.0590 1.77e-3    10 recipe       bag_…     4\n8 recipe_bag_mlp   Prepro… rsq     0.120  2.52e-2    10 recipe       bag_…     4\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Making a workflow to predict CO2 emitted per kilowatt-hour\n\nlibrary(tidymodels)\nrf_wf <- workflow() %>%\n  # Add the recipe\n  add_recipe(rec_energy) %>%\n  # Add the model\n  add_model(rf) %>%\n  # Fit the model to the training data\n  fit(data = ghg_per_eny_train) \n\nrf_data <- augment(rf_wf, new_data = ghg_per_eny_test)\n\ndim(rf_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 158   9\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# finding the most important predictors\n\nrf_model <- extract_fit_engine(rf_wf)\nvip::vip(rf_model) + theme(\n    text = element_text(size = 12),\n    axis.title = element_text(size = 14),\n    axis.text = element_text(size = 10),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    legend.title = element_text(size = 14),\n    legend.text = element_text(size = 12))\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(filename = \"compare_pkwh.png\", plot = last_plot(), path = \"imgs\" )\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nSaving 7 x 5 in image\n```\n\n\n:::\n:::\n\n\n**Figure 5.** Ranking importance of each predictor variable at explaining CO2 emissions per kilowatt-hour in the random forest model selected for analysis.\n\n\n# Results:\n\nOut of the four models tested to predict greenhouse gas emissions per capita (excluding land use change), a random forest model with ranger engine and regression mode was the most accurate. The second best was a boosted tree model. The 2 models had r-squared values of 0.92 and .89, respectively with RMSE = .01 and .020, respectively (Figure 1, Table 2). The most important predictor variables for greenhouse gas emissions per capita were (1) an interaction variable of gdp per capita and energy use per capita, (2) energy use per capita, and (3) gdp per capita (Figure 2).\nFor predicting CO2 per kilowatt-hour, the  random forest model with ranger engine and regression mode was the most accurate, with the second best also being a boosted tree model: The models also had and r-squared of 0.92 and .89, respectively with RMSE = .017 and .020 (Figure 4, Table 4). The top three predictor variables by importance for CO2 consumption per kilowatt hour were (1)  gdp per capita, (2) CO2 emitted from gas consumption, and (3) CO2 emitted from oil consumption (Figure 5).\n\n# Analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Making a correlation plot\n\nlibrary(corrplot)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\ncorrplot 0.95 loaded\n```\n\n\n:::\n\n```{.r .cell-code}\ncorrplot(pc_cor,\n         method = \"color\",        # Color gradient\n         type = \"upper\",          # Show upper triangle only\n         diag = FALSE,            # Hide diagonal (1's)\n         tl.col = \"black\",        # Text label color\n         tl.srt = 45,             # Rotate variable names\n         addCoef.col = \"white\",   # Add correlation coefficients\n         number.cex = 0.7,        # Coefficient font size\n         col = colorRampPalette(c(\"blue\", \"white\", \"red\"))(100))\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n**Figure 6.** correlation table between predictor variables of GHG releaseed per capita excluding land use change per capita.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(corrplot)\n\ncorrplot(pkwh_cor,\n         method = \"color\",        # Color gradient\n         type = \"upper\",          # Show upper triangle only\n         diag = FALSE,            # Hide diagonal (1's)\n         tl.col = \"black\",        # Text label color\n         tl.srt = 45,             # Rotate variable names\n         addCoef.col = \"white\",   # Add correlation coefficients\n         number.cex = 0.7,        # Coefficient font size\n         col = colorRampPalette(c(\"blue\", \"white\", \"red\"))(100))\n```\n\n::: {.cell-output-display}\n![](Final_Report_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n**Figure 7.** Correlation table between the variables predicting CO2 per unit energy. None of the variables had strong enough correlations to make interaction terms.\n\n\nIncluded in CO2 per capita and CO2 per kilowatt-hour generated models, GDP per capita was a highly effective predictor variable because it was the third most important variable for greenhouse gas generation per capita and the most important variable for CO2 emissions per unit of energy generated. (figures 2 and 5). Mirziyoyeva and Salahodjaev (2023) confirm this trend with their own data. They also concluded that this relationship is inverse U-shaped, suggesting there are high emissions pressures at early stages of economic development that then slow down. There are emissions associated with every step of a product’s lifetime. In order from highest to lowest percent of total, energy (34%), industry (24%), agriculture, forestry, and other land use (22%) and shipping as well as both public and private transportation (15%) are involved. Higher associated activity explains correlations in figures 2 and 5. For CO2 emitted per kilowatt-hour, gas CO2 per capita was a close second behind GDP per capita (Figure 5). Natural gas is more favorable to coal because of its lower emissions. For example, the United States saw an 89 Mt increase in gas emissions in 2022 (International Energy Agency, 2022).  Based on Figure 7, fewer variables were correlated when predicting CO2 per unit energy, suggesting a greater variety of predictors was responsible. In Figure 5, predictor variables are far closer together in importance than in Figure 2. Based on the predictor variables, this suggests causes of energy-related CO2 are more complex.\nGreenhouse gas emissions per capita were disproportionately affected by estimations of energy use and GDP, while other factors like coal CO2 were less than a third as important (Figure 5) Temperature change from greenhouse gas emissions was highly correlated with sector-specific emissions like coal as well as total CO2 emissions and even overall energy usage, so interaction terms were added to the model (Figure 6). However, the GHG variable importance model did not rank temperature change from emissions among the top ten predictor variables. Emissions are really a proxy for measuring each country’s global warming responsibility. Temperature change’s strong relationship with predictor variables but not with GHG per capita is expected because some countries can have high per capita emissions but small populations. Still, temperature’s correlations with primary energy consumption (0.90), cumulative CO2 including land use change (0.99), cumulative coal emissions (0.92), and cumulative land use change (.85) support these metrics as estimates of climate change. Primary energy consumption in particular is less directly related to greenhouse gases, but up until present energy consumption is related to global warming because of the interconnectivity of these predictors (Figure 7).\n\n# Discussion\n\nEnergy consumption can decouple with emissions-related warming with a greater adoption of renewable energy sources @mirziyoyeva_salahodjaev_2023 . Energy-related CO2 emissions can be reduced by paying attention to factors like nighttime lights, which were correlated with higher overall emissions @xie_liu_fan_2025. There are several reasons why GDP per capita is such an effective predictor of GHG emissions. Mirziyoyeva and Salahodjaev (2023) point out GDP’s consistent role in emissions.\n\nOne aspect of GDP and emissions that we did not examine was international trade's role in carbon emissions. The import and export of products is harder to attribute to any one country, especially with overseas shipping on cargo carriers. These vessels emit large amounts of greenhouse gases and have been the subject of Our World In Data's study as well. According to the International Energy Agency (2019), one-fifth of the world’s CO2 comes from global transport @iea_2023. \n\nA step to take for future modeling would be to examine what aspects of GDP have the potential to emit fewer greenhouse gases. Currently, economic growth in several upper-income countries has decoupled from emissions per capita, even accounting for offshored production @ritchie_2021. Some countries demonstrate high GDP per capita but have lower emissions and can be a model for the rest of the world. Franco et al. (2023) note that economic factors are an indicator of emissions because of the energy costs of the economic system, especially in cities @franco_melica_treville_baldi_ortega_bertoldi_thiel_2023. \n\nThe countries we looked at emit most of their CO2 from industry, but there are developing countries with high emissions from land use change—most notably Brazil @ritchie_rosado_roser_2023. Khajavi and Rastgoo (2020) also found that a hybrid random forest model was best at predicting CO2 emissions from road transport@khajavi_rastgoo_2023. Due to the COVID lockdown, transportation emissions would have decreased significantly as travel was banned or highly discouraged. Deweese et al. (2022) state that travel-based emissions fell by 36% in April of 2020 @deweese_ravensbergen_el-geneidy_2022. Although travel is one of the largest contributors to greenhouse gas emissions, accounting for all emissions from both public and private sectors is complicated, particularly for tourism @qin_liu_li_2023.\n\n# **Conclusions**\n\nBy predicting both greenhouse gas emissions per capita and CO2 from energy use before, during, and after the COVID-19 era, we used two distinct and relatable lenses to view the climate crisis. Up until the present, CO2 emissions related to energy and CO2 emissions per capita were closely tied to GDP per capita.\n\nGas consumption and coal consumption account for the greatest energy use after GDP, with gas reflecting trends toward this lower-emissions form of energy production. Coal has a high rate of CO2 emissions, which places it third in predicting CO2 emissions per unit energy. Energy use accounts for the most GHG emissions per capita.\n\nCurrent trends in preferred energy sources reflect energy-related emissions, while emissions per capita reflect overall performance. As the renewable energy transition accelerates in countries with developing GDPs, we will continue preparing for a gap between economic growth and emissions.\n",
    "supporting": [
      "Final_Report_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}